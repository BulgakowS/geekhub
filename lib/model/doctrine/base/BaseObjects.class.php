<?php

/**
 * BaseObjects
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $category_id
 * @property integer $actions_id
 * @property integer $user_id
 * @property string $adress
 * @property string $description
 * @property integer $room_count
 * @property integer $floor_count
 * @property boolean $avaible
 * @property integer $price
 * @property Category $Category
 * @property Actions $Actions
 * @property sfGuardUser $sfGuardUser
 * @property Comments $Comments
 * @property Doctrine_Collection $AllPhotos
 * 
 * @method integer             getCategoryId()  Returns the current record's "category_id" value
 * @method integer             getActionsId()   Returns the current record's "actions_id" value
 * @method integer             getUserId()      Returns the current record's "user_id" value
 * @method string              getAdress()      Returns the current record's "adress" value
 * @method string              getDescription() Returns the current record's "description" value
 * @method integer             getRoomCount()   Returns the current record's "room_count" value
 * @method integer             getFloorCount()  Returns the current record's "floor_count" value
 * @method boolean             getAvaible()     Returns the current record's "avaible" value
 * @method integer             getPrice()       Returns the current record's "price" value
 * @method Category            getCategory()    Returns the current record's "Category" value
 * @method Actions             getActions()     Returns the current record's "Actions" value
 * @method sfGuardUser         getSfGuardUser() Returns the current record's "sfGuardUser" value
 * @method Comments            getComments()    Returns the current record's "Comments" value
 * @method Doctrine_Collection getAllPhotos()   Returns the current record's "AllPhotos" collection
 * @method Objects             setCategoryId()  Sets the current record's "category_id" value
 * @method Objects             setActionsId()   Sets the current record's "actions_id" value
 * @method Objects             setUserId()      Sets the current record's "user_id" value
 * @method Objects             setAdress()      Sets the current record's "adress" value
 * @method Objects             setDescription() Sets the current record's "description" value
 * @method Objects             setRoomCount()   Sets the current record's "room_count" value
 * @method Objects             setFloorCount()  Sets the current record's "floor_count" value
 * @method Objects             setAvaible()     Sets the current record's "avaible" value
 * @method Objects             setPrice()       Sets the current record's "price" value
 * @method Objects             setCategory()    Sets the current record's "Category" value
 * @method Objects             setActions()     Sets the current record's "Actions" value
 * @method Objects             setSfGuardUser() Sets the current record's "sfGuardUser" value
 * @method Objects             setComments()    Sets the current record's "Comments" value
 * @method Objects             setAllPhotos()   Sets the current record's "AllPhotos" collection
 * 
 * @package    reelty
 * @subpackage model
 * @author     BulgakowS
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseObjects extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('objects');
        $this->hasColumn('category_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('actions_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('adress', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('description', 'string', 4000, array(
             'type' => 'string',
             'length' => 4000,
             ));
        $this->hasColumn('room_count', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('floor_count', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('avaible', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             ));
        $this->hasColumn('price', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Category', array(
             'local' => 'category_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Actions', array(
             'local' => 'actions_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('sfGuardUser', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Comments', array(
             'local' => 'id',
             'foreign' => 'object_id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('Photos as AllPhotos', array(
             'local' => 'id',
             'foreign' => 'objects_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}